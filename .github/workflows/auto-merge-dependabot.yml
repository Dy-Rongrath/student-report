name: Auto-merge Dependabot PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  # Check if PR is from Dependabot and meets safety criteria
  dependabot-auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Determine if PR should auto-merge
        id: should-merge
        run: |
          echo "Update type: ${{ steps.metadata.outputs.update-type }}"
          echo "Dependency names: ${{ steps.metadata.outputs.dependency-names }}"
          echo "Package ecosystem: ${{ steps.metadata.outputs.package-ecosystem }}"
          
          # Safety rules for auto-merge
          UPDATE_TYPE="${{ steps.metadata.outputs.update-type }}"
          DEP_TYPE="${{ steps.metadata.outputs.dependency-type }}"
          
          # Rule 1: Auto-merge all patch updates (e.g., 1.2.3 -> 1.2.4)
          if [ "$UPDATE_TYPE" = "version-update:semver-patch" ]; then
            echo "auto_merge=true" >> $GITHUB_OUTPUT
            echo "reason=Patch update (safe)" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Rule 2: Auto-merge minor updates for devDependencies only
          if [ "$UPDATE_TYPE" = "version-update:semver-minor" ] && [ "$DEP_TYPE" = "direct:development" ]; then
            echo "auto_merge=true" >> $GITHUB_OUTPUT
            echo "reason=Minor devDependency update" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Rule 3: Auto-merge GitHub Actions updates (always safe)
          if [ "${{ steps.metadata.outputs.package-ecosystem }}" = "github-actions" ]; then
            echo "auto_merge=true" >> $GITHUB_OUTPUT
            echo "reason=GitHub Actions update" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # All other cases require manual review
          echo "auto_merge=false" >> $GITHUB_OUTPUT
          echo "reason=Major version or production dependency - requires manual review" >> $GITHUB_OUTPUT

      - name: Wait for CI checks to pass
        if: steps.should-merge.outputs.auto_merge == 'true'
        uses: lewagon/wait-on-check-action@v1.4.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          running-workflow-name: 'dependabot-auto-merge'
          allowed-conclusions: success

      - name: Enable auto-merge for Dependabot PR
        if: steps.should-merge.outputs.auto_merge == 'true'
        run: |
          gh pr merge --auto --squash "${{ github.event.pull_request.number }}"
          echo "‚úÖ Auto-merge enabled for PR #${{ github.event.pull_request.number }}"
          echo "Reason: ${{ steps.should-merge.outputs.reason }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add comment explaining auto-merge decision
        if: steps.should-merge.outputs.auto_merge == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ü§ñ **Auto-merge enabled**
              
              **Reason:** ${{ steps.should-merge.outputs.reason }}
              **Update Type:** \`${{ steps.metadata.outputs.update-type }}\`
              **Dependencies:** ${{ steps.metadata.outputs.dependency-names }}
              
              This PR will be automatically merged once all CI checks pass.
              
              ---
              *If you need to review this manually, you can disable auto-merge with:*
              \`\`\`bash
              gh pr merge --disable-auto ${{ github.event.pull_request.number }}
              \`\`\``
            })

      - name: Add comment explaining manual review requirement
        if: steps.should-merge.outputs.auto_merge == 'false'
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ö†Ô∏è **Manual review required**
              
              **Reason:** ${{ steps.should-merge.outputs.reason }}
              **Update Type:** \`${{ steps.metadata.outputs.update-type }}\`
              **Dependencies:** ${{ steps.metadata.outputs.dependency-names }}
              
              Please review this PR manually before merging.
              
              **Review checklist:**
              - [ ] Check CHANGELOG for breaking changes
              - [ ] Verify CI/CD passes
              - [ ] Test locally if needed
              - [ ] Run \`npm audit\` to check for vulnerabilities
              
              ---
              *To merge manually:*
              \`\`\`bash
              git merge origin/${{ github.event.pull_request.head.ref }}
              git push origin main
              \`\`\``
            })

      - name: Approve PR automatically (for patch updates)
        if: steps.should-merge.outputs.auto_merge == 'true' && steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: |
          gh pr review --approve "${{ github.event.pull_request.number }}" \
            --body "‚úÖ Auto-approved: Safe patch update. CI checks passed."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
